#pragma once
#include <types.h>

namespace t4ext {
    class WeaponWheel {
        public:
            bool32 Has_WarClub; //0x0000 
            i32 UnkValue; //0x0004 
            i32 UnkValue2; //0x0008 
            i32 UnkValue3; //0x000C 
            i32 WarClubID; //0x0010 
            i32 WarClubVal1; //0x0014 
            i32 WarClubVal2; //0x0018 
            undefined pad_0x001C[0x4]; //0x001C
            bool32 Has_WarClub2; //0x0020 
            bool32 Has_Bow1; //0x0024 
            bool32 owID; //0x0028 
            bool32 ow_Normal_Ammo; //0x002C 
            bool32 ow_Explosive_Ammo; //0x0030 
            bool32 ow_Poison_Ammo; //0x0034 
            bool32 Bow_Has_Normal; //0x0038 
            bool32 Bow_Has_Explosive; //0x003C 
            bool32 Bow_Has_Poison; //0x0040 
            undefined pad_0x0044[0x4]; //0x0044
            bool32 Has_Bow2; //0x0048 
            bool32 Has_TekBow; //0x004C 
            i32 TekBowID; //0x0050 
            i32 Tekbow_Normal_Ammo; //0x0054 
            i32 TekBow_Explosive_Ammo; //0x0058 
            i32 TekBow_Poison_Ammo; //0x005C 
            bool32 Tekbow_Has_Normal; //0x0060 
            bool32 TekBow_Has_Explosive; //0x0064 
            bool32 TekBow_Has_Poison; //0x0068 
            undefined pad_0x006C[0x4]; //0x006C
            bool32 Has_Tekbow2; //0x0070 
            bool32 Has_SpikeGrenade; //0x0074 
            i32 SpikeGrenadeID; //0x0078 
            i32 SpikeGrenade_Ammo; //0x007C 
            i32 SpikeGrenade_Ammo2; //0x0080 
            i32 SpikeGrenade_Ammo3; //0x0084 
            bool32 SpikeGrenade_Has_Ammo; //0x0088 
            bool32 SpikeGrenade_Has_Ammo2; //0x008C 
            bool32 SpikeGrenade_Has_Ammo3; //0x0090 
            undefined pad_0x0094[0x4]; //0x0094
            bool32 Has_SpikeGrenade2; //0x0098 
            bool32 Has_Pistol; //0x009C 
            i32 PistolID; //0x00A0 
            i32 Pistol_Ammo; //0x00A4 
            i32 Pistol_Ammo2; //0x00A8 
            i32 Pistol_Ammo3; //0x00AC 
            bool32 Pistol_Has_Ammo; //0x00B0 
            bool32 Pistol_Has_Ammo2; //0x00B4 
            bool32 Pistol_Has_Ammo3; //0x00B8 
            undefined pad_0x00BC[0x4]; //0x00BC
            bool32 Has_Pistol2; //0x00C0 
            bool32 Has_ShotGun; //0x00C4 
            i32 ShotGunID; //0x00C8 
            i32 ShotGun_Ammo; //0x00CC 
            i32 ShotGun_Ammo1; //0x00D0 
            i32 ShotGun_Ammo2; //0x00D4 
            bool32 ShotGun_Has_Ammo1; //0x00D8 
            bool32 ShotGun_Has_Ammo2; //0x00DC 
            bool32 ShotGun_Has_Ammo3; //0x00E0 
            undefined pad_0x00E4[0x4]; //0x00E4
            bool32 Has_ShotGun2; //0x00E8 
            bool32 Has_Fleechete; //0x00EC 
            i32 FleecheteID; //0x00F0 
            i32 Fleechete_Ammo; //0x00F4 
            i32 MiniGun_Ammo; //0x00F8 
            i32 Fleechete_Ammo2; //0x00FC 
            bool32 Fleechete_Has_Ammo; //0x0100 
            bool32 MiniGun_Has_Ammo; //0x0104 
            bool32 Fleechete_Has_Ammo2; //0x0108 
            undefined pad_0x010C[0x4]; //0x010C
            bool32 Has_Fleechete2; //0x0110 
            bool32 Has_RocketLauncher; //0x0114 
            i32 RocketLauncherID; //0x0118 
            i32 RocketLauncher_Ammo; //0x011C 
            i32 RocketLauncher_Ammo2; //0x0120 
            i32 RocketLauncher_Ammo3; //0x0124 
            bool32 RocketLauncher_Has_Ammo; //0x0128 
            bool32 RocketLauncher_Has_Ammo1; //0x012C 
            bool32 RocketLauncher_Has_Ammo2; //0x0130 
            undefined pad_0x0134[0x4]; //0x0134
            bool32 Has_RocketLauncher2; //0x0138 
            bool32 Has_PlasmaCannon; //0x013C 
            i32 PlasmaCannonID; //0x0140 
            i32 PlasmaCannon_Ammo; //0x0144 
            i32 PlasmaCannon_Ammo2; //0x0148 
            i32 PlasmaCannon_Ammo3; //0x014C 
            bool32 PlasmaCannon_Has_Ammo; //0x0150 
            bool32 PlasmaCannon_Has_Ammo2; //0x0154 
            bool32 PlasmaCannon_Has_Ammo3; //0x0158 
            undefined pad_0x015C[0x4]; //0x015C
            bool32 Has_PlasmaCannon2; //0x0160 
            bool32 Has_FlameThrower; //0x0164 
            i32 FlameThrowerID; //0x0168 
            i32 FlameThrower_Ammo; //0x016C 
            i32 FlameThrower_Ammo2; //0x0170 
            i32 FlameThrower_Ammo3; //0x0174 
            bool32 FlameThrower_Has_Ammo; //0x0178 
            bool32 FlameThrower_Has_Ammo2; //0x017C 
            bool32 FlameThrower_Has_Ammo3; //0x0180 
            undefined pad_0x0184[0x4]; //0x0184
            bool32 Has_FlameThrower2; //0x0188 
            bool32 Has_SpiderMine; //0x018C 
            i32 SpiderMineID; //0x0190 
            i32 SpiderMine_Ammo; //0x0194 
            i32 SpiderMine_Ammo2; //0x0198 
            i32 SpiderMine_Ammo3; //0x019C 
            bool32 SpiderMine_Has_Ammo; //0x01A0 
            bool32 SpiderMine_Has_Ammo2; //0x01A4 
            bool32 SpiderMine_Has_Ammo3; //0x01A8 
            undefined pad_0x01AC[0x4]; //0x01AC
            bool32 Has_SpiderMine2; //0x01B0 
            bool32 Has_GravityGun; //0x01B4 
            i32 GravityGunID; //0x01B8 
            i32 GravityGun_Ammo; //0x01BC 
            i32 GravityGun_Ammo2; //0x01C0 
            i32 GravityGun_Ammo3; //0x01C4 
            bool32 GravityGun_Has_Ammo; //0x01C8 
            bool32 GravityGun_Has_Ammo2; //0x01CC 
            bool32 GravityGun_Has_Ammo3; //0x01D0 
            undefined pad_0x01D4[0x4]; //0x01D4
            bool32 Has_GravityGun2; //0x01D8 
            bool32 Has_DarkMatterCube; //0x01DC 
            i32 DarkMatterCubeID; //0x01E0 
            i32 DarkMatterCube_Ammo; //0x01E4 
            i32 DarkMatterCube_Ammo2; //0x01E8 
            i32 DarkMatterCube_Ammo3; //0x01EC 
            bool32 DarkMatterCube_Has_Ammo; //0x01F0 
            bool32 DarkMatterCube_Has_Ammo2; //0x01F4 
            bool32 DarkMatterCube_Has_Ammo3; //0x01F8 
            undefined pad_0x01FC[0x4]; //0x01FC
            bool32 Has_DarkMatterCube2; //0x0200 
            bool32 Has_CrossBow; //0x0204 
            i32 CrossBowID; //0x0208 
            i32 CrossBow_Normal_Ammo; //0x020C 
            i32 CrossBow_Explosive_Ammo; //0x0210 
            i32 CrossBow_Poison_Ammo; //0x0214 
            bool32 CrossBow_Has_Normal; //0x0218 
            bool32 CrossBow_Has_Explosive; //0x021C 
            bool32 CrossBow_Has_Poison; //0x0220 
            undefined pad_0x0224[0x4]; //0x0224
            bool32 Has_CrossBow2; //0x0228 
    };
};